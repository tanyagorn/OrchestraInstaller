copyright 2011-2012 Aaron Spear 
This work is released under the MIT license.  You can do whatever you wish with it, but I am absolutely 
not responsible for anything evil that may occur.

This code lives on github at:
https://github.com/aspear/izpack5-example-installer

This project is an example of how to create a working Izpack 5.x installer using maven as the build system.
I make no claims that it is a GOOD example, but it is an example that works.  I would be quite
happy to receive any feedback or ideas on how to improve it.

The project is broken into two pieces.  The panels directory contains a maven project that builds 
a jar containing the implementation of a custom panel.  In this case I just copied the HelloPanel.java that
is included as a part of IZpack and changed the name to prove the concept.  The "installer" sub directory 
contains the build of the installer itself that packages up the custom panel as a part of the installer.

to build:

cd panels
mvn clean install

cd ../installer
mvn clean package



15.6.2018 - 17.23pm
- variable username, password, servername, port => all DB type is set as one
(if need to be seperate, then just duplicate no. of variable is an easy dirty solution)
- already call gen_password.cmd in processPanel, but still need a way to utilize that value
- need to copy JDBC driver provided by user to folder or-WEB-lib <<< currently has no way to do with original Izpack,
  but there might be a way if integrate with ANT




- twoway ver write file

- build .class from .java
javac -cp .\* TwoWayPassword.java
jar cvf TwoWayPassword.java.jar TwoWayPassword.java.class

working:
Let TwoWayPassword edit environment_setting file directly, but we need a way to parse the location path of edit file first!!

use .class instead, place in security
- using .class works, but how can we parse variable there??
- custom java in panels directory
- just parse directly to java file currently located in Orchestra folder

error list:
index 63 caused by trying to parse .class file in install.xml

==========================

6.19.2018 : 12:24

- Edit HelloWorld.java in panels, then use mvn clean install
- Copy HelloWorld.class from panels/target to the same directory as install.xml, then convert .class to .jar by jar cvf TwoWayPassword.jar TwoWayPassword.class 
- mvn clean package

==========================

6.19.2018 : 2:23

- Edit HelloWorld.java in panels, then use mvn clean install
- To create jar with package structure, 
	cd D:\soffico\installer\OrchestraInstaller\panels\target\classes
	jar cvf HelloWorld.jar emds\epi\impl\security\HelloWorld.class

==========================

6.19.2018 : 10:20

- Complete encrypt username/password and replace in environment_setting.xml 
	procedure:
		edit .java file in panels src directory
		mvn clean install
		open another window folder suppose its name test, This folder must contains orchestra-commons-4.8.0.0-SNAPSHOT.jar
		convert .jar to .class
		copy .class from target panels to the right path emds\epi\impl\security
		then go back to the top level folder, parent of emds, then enter cmd with command jar cvf orchestra.jar
		copy orchestra.jar to the same directory as install.xml
		mvn clean package
		
==========================

7.02.2018 : 2:40

- Internationalization of Panels
- In need of Internationalization for custom panel (detect ISO variable and then make a file to support both languages)
- Select English -> %ISO3_LANG = eng, condition variable

==========================

7.11.2018 : 2:43

- JDBC completed 
- All internationalization of panels is completed
	Ref: https://izpack.atlassian.net/wiki/spaces/IZPACK/pages/491682/UserInputPanel

