<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<installation version="5.0">
  
  <!-- *************************************************
    Info - Some general information for the installer
  *************************************************** -->
  <info>
    <appname>Orchestra</appname>
    <appversion>4.8</appversion>
    <url>http://orchestra.soffico.de/en/start-2/</url>    
    <authors>
        <author name="soffico GmbH" email="info(at)soffico.de"/>
    </authors>
    <javaversion>1.7</javaversion>
    <requiresjdk>yes</requiresjdk>
  </info>

  <!-- *************************************************
    GUI Preferences - set the layout and behavior 
    of the GUI when the installer runs
  *************************************************** -->
  <guiprefs width="650" height="480" resizable="no">
    <modifier key="useLabelIcons" value="no"/>
    <modifier key="useHeadingPanel" value="yes"/>
    <modifier key="headingLineCount" value="1"/>
    <modifier key="headingFontSize" value="1.5"/>
    <modifier key="useFlags" value="no"/>
    <modifier key="langDisplayType" value="native"/>
    <modifier key="allYGap" value="8"/>
    <modifier key="allXGap" value="4"/>
    <modifier key="labelGap" value="2"/>
    <modifier key="layoutAnchor" value="NORTHWEST"/>
    <modifier key="headingPanelCounter" value="progressbar"/>
    <modifier key="headingPanelCounterPos" value="inNavigationPanel"/>
    <!-- Show the splashScreen for a minimum of 1000 milliseconds -->   
    <modifier key="useSplashScreen" value="1000"/>   
  </guiprefs>

  <locale>
    <langpack iso3="eng"/>
    <langpack iso3="deu"/>
  </locale>

  <!-- access to OS-dependent shared libraries -->
  <natives>
   <native type="izpack" name="ShellLink.dll" stage="both">
     <os family="windows" />
   </native>
   <native type="izpack" name="ShellLink_x64.dll" stage="both">
     <os family="windows" />
    </native>
  </natives>

  <!-- *************************************************
    Variables - Define variables to be used in the 
    variables substitution system
  *************************************************** -->
  <dynamicvariables>

    <!-- Regular expression fix backslash issues -->
    <variable name="INSTALL" value="$INSTALL_PATH">
      <filters>
        <regex regexp="[/\\]+" replace="/" global="true" />
      </filters>
    </variable>

    <!-- Location where tomcat is installed -->
    <variable name="TOMCAT_HOME" value="${tomcat.home}"/>

    <!-- Connecter type including MYSQL, DB2, Oracle, MSSQL -->
    <variable name="CONNECTOR_TYPE" value="${connector.type}"/>

    <!-- Only a JDK which has a version in the range of min to 
    max will be accepted, also if the installer can detect JDK
    by itself, JDKPathPanel will be skipped automatically.
    NOTE: Auto detection might fail, in that case user has to
    provide JDK path manually via input field -->
    <variable name="JDKPathPanel.minVersion" value="1.6"/>
    <variable name="JDKPathPanel.maxVersion" value="1.8"/>
    <variable name="JDKPathPanel.skipIfValid" value="yes"/>

    <!-- Location where Java is installed -->
    <variable name="ORC_JAVA_HOME" value="$JAVA_HOME"/>

    <!-- 
      These two line are used to prevent error occured by user selected jdk package
      that is not match with the path in environment variable. In both case,
      it will eventually use the one in path environment
    -->
    <!-- JavaHome exists, JDK_PATH will have value of JAVA_HOME -->
    <variable name="JRE_PATH" value="$JAVA_HOME" condition="!isEmptyJavaHome"/>
    <!-- JavaHome is empty, JDK_PATH will have value of jdkPath specified by user -->
    <variable name="JRE_PATH" value="$jdkPath\jre" condition="isEmptyJavaHome"/>

    <!-- For database configuration to form a url connecting string -->
    <variable name="USERNAME" value="${dbUserName}" />
    <variable name="PASSWORD" value="${dbPassword}" />
    <variable name="SERVER_NAME" value="${server.name}" />
    <variable name="SERVER_START_PORT" value="${server.start.port}" />
    <variable name="SERVER_SHUTDOWN_PORT" value="${server.shutdown.port}" />
    <variable name="DATABASE_NAME" value="${db.name}" />

    <!-- Set flag in environment_setting.xml -->
    <!-- CONNECTOR_NAME_FOLDER_PATH is used as variable in flyway.conf -->
    <!-- SQL CONNECTOR -->
    <variable name="CONNECTOR_NAME" value="mysql" condition="condition.mysql"/>
    <variable name="CONNECTOR_NAME_FOLDER_PATH" value="MySQL" condition="condition.mysql"/>
    <variable name="JDBC_URL" value="${jdbcURL}" condition="condition.mysql"/>
    <variable name="JDBC_DRIVER" value="${jdbcDriver}" condition="condition.mysql"/>
    <!-- SQL, set other connectors enable flag to false -->
    <variable name="DB_ORACLE" value="false" condition="condition.mysql"/>  
    <variable name="DB_DB2" value="false" condition="condition.mysql"/>  
    <variable name="DB_MYSQL" value="true" condition="condition.mysql"/>  
    <variable name="DB_MSSQL" value="false" condition="condition.mysql"/>  
    <variable name="FLYWAY_URL" value="jdbc:$CONNECTOR_NAME://$SERVER_NAME:$SERVER_START_PORT/$DATABASE_NAME?autoReconnect=true&amp;useSSL=false" condition="condition.mysql" />

    <!-- DB_ORACLE -->
    <variable name="CONNECTOR_NAME" value="oracle" condition="condition.oracle"/>
    <variable name="CONNECTOR_NAME_FOLDER_PATH" value="Oracle" condition="condition.oracle"/>
    <!-- ORACLE, set other connectors enable flag to false -->
    <variable name="DB_ORACLE" value="true" condition="condition.oracle"/>  
    <variable name="DB_DB2" value="false" condition="condition.oracle"/>  
    <variable name="DB_MYSQL" value="false" condition="condition.oracle"/>  
    <variable name="DB_MSSQL" value="false" condition="condition.oracle"/>
    <variable name="FLYWAY_URL" value="jdbc:oracle:thin:@$SERVER_NAME:$SERVER_START_PORT:$DATABASE_NAME" condition="condition.oracle" />

    <!-- DB_DB2 -->
    <variable name="CONNECTOR_NAME" value="db2" condition="condition.db2"/>
    <variable name="CONNECTOR_NAME_FOLDER_PATH" value="DB2" condition="condition.db2"/>
    <!-- DB2, set other connectors enable flag to false -->
    <variable name="DB_ORACLE" value="false" condition="condition.db2"/>  
    <variable name="DB_DB2" value="true" condition="condition.db2"/>  
    <variable name="DB_MYSQL" value="false" condition="condition.db2"/>  
    <variable name="DB_MSSQL" value="false" condition="condition.db2"/>
    <variable name="FLYWAY_URL" value="jdbc:db2://$SERVER_NAME:$SERVER_START_PORT/$DATABASE_NAME:currentSchema=ORCHESTRA;" condition="condition.db2" />

    <!-- DB_sqlserver-->
    <variable name="CONNECTOR_NAME" value="sqlserver" condition="condition.sqlserver"/>
    <variable name="CONNECTOR_NAME_FOLDER_PATH" value="MSSQLServer" condition="condition.sqlserver"/>
    <!-- sqlserver, set other connectors enable flag to false -->
    <variable name="DB_ORACLE" value="false" condition="condition.sqlserver"/>  
    <variable name="DB_DB2" value="false" condition="condition.sqlserver"/>  
    <variable name="DB_MYSQL" value="false" condition="condition.sqlserver"/>  
    <variable name="DB_MSSQL" value="true" condition="condition.sqlserver"/>
    <variable name="FLYWAY_URL" value="jdbc:sqlserver://$SERVER_NAME:$SERVER_START_PORT;sendStringParametersAsUnicode=false;DatabaseName=$DATABASE_NAME" condition="condition.sqlserver" />
  </dynamicvariables>

  <!-- *************************************************
    Define conditions which can be used to dynamically 
    change the installer (panels shown, variable set)
    Require
      - type of the condition
      - id has to be unique, used to refer to this 
        conditions in other elements
  *************************************************** -->
  <conditions>
    <condition type="empty" id="isEmptyJavaHome">
      <variable>ORC_JAVA_HOME</variable>
    </condition>

    <!-- If connecter.type == oracle, condition.oracle will be true, 
    all of oracle connector variable will be assigned value -->
    <condition type="variable" id="condition.oracle">
      <name>connector.type</name>
      <value>oracle</value>
    </condition>

    <condition type="variable" id="condition.db2">
      <name>connector.type</name>
      <value>db2</value>
    </condition>

    <condition type="variable" id="condition.mysql">
      <name>connector.type</name>
      <value>mysql</value>
    </condition>

    <condition type="variable" id="condition.sqlserver">
      <name>connector.type</name>
      <value>sqlserver</value>
    </condition>

    <panelcondition panelid="jdk.path.panel" conditionid="!isEmptyJavaHome" />
  </conditions>

  <!-- *************************************************
    Resources used by the installer
  *************************************************** -->
  <resources>
    <res src="pack_designer/Licenses/JGoodies_License.txt"  id="LicencePanel.licence_eng" />
    <res src="ProcessPanel.Spec.xml"                        id="ProcessPanel.Spec.xml"/>
    <res src="Win_shortcutSpec.xml"                         id="Win_shortcutSpec.xml"/>
    <res src="Unix_shortcutSpec.xml"                        id="Unix_shortcutSpec.xml"/>
    <res src="UserInput.Spec.xml"                           id="userInputSpec.xml"/>
    <res src="emds_logo.png"                                id="Heading.image" />
    <res src="i18n/CustomLangPack.xml_eng"                  id="CustomLangPack.xml_eng"/>
    <res src="i18n/CustomLangPack.xml_deu"                  id="CustomLangPack.xml_deu"/>
    <res src="emds_logo_v2.png"                             id="installer.langsel.img"/>
    <!--Define the splash screen image as a reading just like a heading image -->
    <res src="emds_logo_v2.png"                             id="Splash.image" />
  </resources>

  <!-- *************************************************
    Jar - external jar files containing a java archive 
  *************************************************** -->
  <!-- for parsing encrypted username/password, and a class 
  for accessing file system for copying directory to destination  -->
  <jar src="orchestra.jar" stage="install"/>

  <!-- *************************************************
    Panels - This set of panel will appear in the 
    installer in the order in which they are listed here 
  *************************************************** -->
  <panels>
    <panel classname="HelloPanel"/>

    <!-- 
      This is custom panel, loaded from the izpack-panels.jar file
      Keep it comment like this for being an example for future used
    -->    
    <!-- 
    <panel classname="com.izforge.izpack.panels.mypanels.MyHelloPanel" id="myHello"/>
    -->

    <panel classname="LicencePanel"   id="LicencePanel.licence_eng" />
    <panel classname="TargetPanel" />
    <panel classname="JDKPathPanel"   id="jdk.path.panel"/>
    <panel classname="PacksPanel"/>
    <panel classname="UserInputPanel" id="Tomcat.Conf"/>
    <panel classname="UserInputPanel" id="Connector.Select"/>
    <panel classname="UserInputPanel" id="Connector.Sql.Conf"/>
    <panel classname="InstallPanel"/>
    <panel classname="ProcessPanel"/>
    <panel classname="ShortcutPanel"/>
    <panel classname="SimpleFinishPanel"/>
  </panels>

  <!-- *************************************************
    Pack - bundles of files grouped under a certain 
    package ID.There are two packs for selecting 
    when install, Core and runtime
      In pack core, user won't get Database directory
      In pack runtime, exists Database directory
    NOTE: pack core is mandatory (always require to install)
  *************************************************** -->
  <packs>
    <pack name="Orchestra Core" preselected="yes" required="yes" variable="pack.designer">
      <description>Orchestra Core : Include Orchestra Designer </description>
      <fileset dir="pack_designer" targetdir="$INSTALL_PATH/"/>

      <!-- For Windows: Modify orchestra_env.bat -->
      <file targetdir="$INSTALL_PATH/Startscripts/Windows" src="pack_designer/Startscripts/Windows/orchestra_env.bat"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Startscripts/Windows/orchestra_env.bat" parse="yes"/>

      <!-- For Unix: Modify orchestra_env.sh -->
      <file targetdir="$INSTALL_PATH/Startscripts/Unix" src="pack_designer/Startscripts/Unix/orchestra_env.sh"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Startscripts/Unix/orchestra_env.sh" parse="yes"/>

      <!-- Mark as executable file after the installation, fix permission denied issue in Unix system -->
      <executable targetfile="$INSTALL_PATH/Startscripts/Unix/designer.sh" os="unix" stage="never" failure="warn" keep="true" />

      <file override="true" targetdir="$INSTALL_PATH/Application/orchestra/WEB-INF/classes/config/" src="pack_designer/Application/orchestra/WEB-INF/classes/config/environment_settings.xml"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Application/orchestra/WEB-INF/classes/config/environment_settings.xml" parse="yes"/>  
    </pack>

    <pack name="Orchestra Runtime" preselected="yes" required="no" variable="pack.runtime">
      <description>Connect with Database</description>
      <fileset dir="pack_runtime" targetdir="$INSTALL_PATH/"/>

      <!-- Unpacking .zip file to destination is much more faster than install whole directory in installing process -->
      <file src="orchestra.zip" targetdir="$TOMCAT_HOME/webapps" unpack="true" override="true" />

      <file override="true" targetdir="$TOMCAT_HOME/webapps/orchestra/WEB-INF/classes/config/" src="pack_designer/Application/orchestra/WEB-INF/classes/config/environment_settings.xml"/>
      <parsable type="shell" targetfile="$TOMCAT_HOME/webapps/orchestra/WEB-INF/classes/config/environment_settings.xml" parse="yes"/>
      <parsable type="shell" targetfile="$TOMCAT_HOME/webapps/orchestra/WEB-INF/classes/logging.properties" parse="yes"/>
      
      <!-- Tomcat Configuration in Unix -->
      <file override="true" targetdir="$TOMCAT_HOME/bin/" src="tomcat_configuration/setenv.sh">
        <os family="unix" />
      </file>
      <parsable type="shell" targetfile="$TOMCAT_HOME/bin/setenv.sh" parse="yes" >
        <os family="unix" />
      </parsable>

      <!-- Tomcat Configuration in Windows -->
      <file override="true" targetdir="$TOMCAT_HOME/bin/" src="tomcat_configuration/setenv.bat">
        <os family="windows" />
      </file>
      <parsable type="shell" targetfile="$TOMCAT_HOME/bin/setenv.bat" parse="yes" >
        <os family="windows" />
      </parsable>

      <!-- No Flyway : MySQL configuration -->
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/Scripts/MySQL/mysql_install_all.sql" parse="yes"/>

      <!-- Flyway Configuration -->
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/Flyway/conf/flyway.conf" parse="yes"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/Flyway/db_migration.sh" parse="yes"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/Flyway/db_migration.bat" parse="yes"/>
      <executable targetfile="$INSTALL_PATH/Database/Flyway/db_migration.sh" os="unix" stage="never" failure="warn" keep="true" />
      <executable targetfile="$INSTALL_PATH/Database/Flyway/db_migration.bat" os="unix" stage="never" failure="warn" keep="true" />
      <executable targetfile="$INSTALL_PATH/Database/Flyway/flyway" os="unix" stage="never" failure="warn" keep="true" />
      <executable targetfile="$INSTALL_PATH/Database/Flyway/flyway.cmd" os="windows" stage="never" failure="warn" keep="true" />

      <!-- Flyway Configuration using maven -->
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/orchestra-db/pom.xml" parse="yes"/>
      <!-- Mark as executable file after the installation, fix permission denied issues -->
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/orchestra-db/db_migration.sh" parse="yes"/>
      <parsable type="shell" targetfile="$INSTALL_PATH/Database/orchestra-db/db_migration.bat" parse="yes"/>
      <executable targetfile="$INSTALL_PATH/Database/orchestra-db/db_migration.sh" os="unix" stage="never" failure="warn" keep="true" />
      <executable targetfile="$INSTALL_PATH/Database/orchestra-db/db_migration.bat" os="windows" stage="never" failure="warn" keep="true" />
    
    </pack>
  </packs>
  
</installation>
