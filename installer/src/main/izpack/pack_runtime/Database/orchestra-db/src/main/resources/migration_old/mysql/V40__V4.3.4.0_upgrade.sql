ALTER TABLE ORC_MESSAGE_LIST
	CHANGE MLI_IS_SYSTEM MLI_TYPE INT(3),
	ADD MLI_CREATED_AT TIMESTAMP AFTER MLI_ID;

ALTER TABLE ORC_MESSAGE_LIST
	CHANGE MLI_ID MLI_ID BIGINT;

ALTER TABLE ORC_MESSAGE_LIST_ENTRY
	CHANGE MLE_ID MLE_ID BIGINT;

ALTER TABLE ORC_MESSAGE_LIST_ENTRY_PROP
	CHANGE MLP_ID MLP_ID BIGINT;

ALTER TABLE ORC_MESSAGE_LIST_INDEX 
	CHANGE MLI_ID MLI_ID BIGINT;
	
DROP TABLE ORC_MESSAGE_REFERERS;

CREATE TABLE ORC_MESSAGE_REFERERS
(
  MRE_OBJECT_ID  VARCHAR(255),
  MRE_REFERRER_ID  VARCHAR(255),
  MRE_REF_TYPE INT,
  MRE_OBJECT_TYPE INT,
  MRE_MESSAGELIST_ID BIGINT
)ENGINE= innodb;

CREATE INDEX IDX_MSG_REFERRER_PROCESS_ID ON ORC_MESSAGE_REFERERS(MRE_REFERRER_ID);

CREATE INDEX IDX_MSG_REFERRER_MESSAGE_ID ON ORC_MESSAGE_REFERERS(MRE_OBJECT_ID);

CREATE TABLE ORC_PROCESSINSTANCE_STATE 
(
  		PRS_ID            VARCHAR(255) NOT NULL,
  		PRS_DATA          longblob,
  		PRS_PROCESSMODELL VARCHAR(255) DEFAULT NULL,
		KEY IDX_ORC_PROCESINST_STATE_ID (PRS_ID)
);
 		 
ALTER TABLE ORC_EVENT_PROCESS_TOKEN
  ADD EVT_ORCHESTRA_LINK VARCHAR(254);

CREATE TABLE ORC_USERSCENARIOMAP
(
  USER_ID      VARCHAR(254)               NOT NULL,
  SCENARIO_ID  VARCHAR(254)               NOT NULL
);

ALTER TABLE ORC_USERSCENARIOMAP 
	ADD CONSTRAINT P_USER_SCENARIO PRIMARY KEY (USER_ID, SCENARIO_ID);
 
INSERT INTO ORC_SEC_ROLE_V2 (OSR_SCENARIO,OSR_IDENTIFIER,OSR_DESC) 
     values ('RUNTIME','RUNTIME:Scenario.SuperUser',null);

INSERT INTO ORC_SEC_USER_ROLES_V2 
    SELECT
        OSC_UNIQUE_ID,'Scenario.SuperUser'
    FROM
        ORC_SEC_CREDENTIAL_V2
    WHERE OSC_SCENARIO = 'RUNTIME'; 

ALTER TABLE ORC_PROCESS_RUNTIME_STATE 
        ADD PRS_GLOBAL_TID VARCHAR(64);

ALTER TABLE ORC_PROCESS_RUNTIME_STATE 
  ADD PRS_IS_STANDALONE INT(2) DEFAULT NULL;

CREATE TABLE ORC_TRANSACTION 
(
  TRA_TAID        VARCHAR(64)	NOT NULL,
  TRA_CREATE_DATE timestamp		NOT NULL,
  TRA_STATE       int(2)		NOT NULL,
  PRIMARY KEY (TRA_TAID)
);


CREATE TABLE ORC_TRANSACTION_LOG_ENTRY 
(
  TLE_TAID    VARCHAR(64) DEFAULT NULL,
  TLE_ACTION  VARCHAR(64) DEFAULT NULL,
  TLE_INFO    VARCHAR(64) DEFAULT NULL,
  TLE_MODE    int(11)	  DEFAULT NULL,
  TLE_ORDER   bigint(30)     DEFAULT NULL,
 KEY IDX_ORC_TRANSACTION_LOG_ENTRY (TLE_TAID)
 );
  
CREATE TABLE ORC_TRANSACTION_BRANCH 
(
  TBR_TAID 	   VARCHAR(64) DEFAULT NULL,
  TBR_TYP      VARCHAR(64) DEFAULT NULL,
  TBR_BRANCH   VARCHAR(64) DEFAULT NULL,
  TBR_DATA     blob,
 KEY IDX_ORC_TRANSACTION_BRANCH (TBR_TAID)
 );  

CREATE TABLE ORC_ESB_SIGNAL_STATE 
(
	EST_IDENTIFIER	VARCHAR(64),
	EST_DATE		timestamp,
	EST_NODE		VARCHAR(64)
);
	
CREATE TABLE ORC_JAVA_CLASS 
(
	JCL_SCENARIO	VARCHAR(250),
	JCL_NAME		VARCHAR(250),
	JCL_DATA		longblob,
	JCL_DEPLAYED_AT	TIMESTAMP,
	JCL_UNIQUE_NAME	VARCHAR(250) NOT NULL
);
	
CREATE UNIQUE INDEX UIDX_ORC_JAVA_CLASS 
	ON ORC_JAVA_CLASS (JCL_SCENARIO, JCL_NAME);
	
ALTER TABLE ORC_JAVA_CLASS ADD
  CONSTRAINT PK_ORC_JAVA_CLASS PRIMARY KEY (JCL_UNIQUE_NAME);

ALTER TABLE ORC_MESSAGE_LIST_ENTRY  
CHANGE MLE_REFERENCE MLE_REFERENCE VARCHAR(256);
 
ALTER TABLE ORC_MESSAGE_LIST_ENTRY_PROP  
CHANGE MLP_REFERENCE MLP_REFERENCE VARCHAR(256);
 
ALTER TABLE ORC_MESSAGE_LIST_INDEX  
CHANGE MLI_REFERENCE MLI_REFERENCE VARCHAR(256);

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,19,'Transaction started');
                       
INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,20,'Transaction rollback');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,21,'Global Transaction commit');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,22,'Global Transaction error');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,23,'Global Transaction prepared');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,24,'Global Transaction attached');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,25,'Signal send to cell');

INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE,EAC_ACTION,EAC_DESCRIPTION) 
                       VALUES(2,26,'Process restarted');

/* --------------  ADD STATEMENTS 05.07.12 --------------*/
INSERT INTO ORC_EVENT_SOURCE (ESO_SOURCE, ESO_DESCRIPTION)
						VALUES (15,'HouseKeeping');
INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE, EAC_ACTION, EAC_DESCRIPTION)
                        VALUES (15, 0, 'house keeping job started');
INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE, EAC_ACTION, EAC_DESCRIPTION)
                        VALUES (15, 1, 'house keeping job finished');
INSERT INTO ORC_EVENT_ACTIONS(EAC_SOURCE, EAC_ACTION, EAC_DESCRIPTION)
                        VALUES (15, 2, 'house keeping job failed');
Commit;
