
CREATE TABLE ORC_ADAPTER_STATE
(
  ADS_ADAPTER_NAME   VARCHAR(255)         NOT NULL,
  ADS_ADAPTER_STATE  NUMERIC(10),
  ADS_CHANGED_AT     DATETIME
);

CREATE TABLE ORC_ARCHIVE
(
  ARC_SCENARIO     VARCHAR(250),
  ARC_NAME         VARCHAR(250),
  ARC_DATA         IMAGE,
  ARC_DEPLOYED_AT  DATETIME,
  ARC_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_CHANNEL
(
  CHA_SCENARIO     VARCHAR(250),
  CHA_NAME         VARCHAR(250),
  CHA_DATA         IMAGE,
  CHA_DEPLOYED_AT  DATETIME,
  CHA_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_CONTENT_MAPPING
(
  CMA_SCENARIO     VARCHAR(250),
  CMA_NAME         VARCHAR(250),
  CMA_DATA         IMAGE,
  CMA_DEPLOYED_AT  DATETIME,
  CMA_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_CONTENT_TYPE
(
  CTY_SCENARIO     VARCHAR(250),
  CTY_NAME         VARCHAR(250),
  CTY_DATA         IMAGE,
  CTY_DEPLOYED_AT  DATETIME,
  CTY_UNIQUE_NAME  VARCHAR(250) NOT NULL
);
















CREATE TABLE ORC_EVENT
(
  EVENT_ID    bigint IDENTITY(1,1) NOT NULL,
  EVT_DATE    DATETIME,
  EVT_TYPE    NUMERIC(10),
  EVT_SOURCE  NUMERIC(10),
  EVT_ACTION  NUMERIC(10)
);








CREATE TABLE ORC_EVENT_PROCESS
(
  EVENT_ID           bigint IDENTITY(1,1) NOT NULL,
  EVT_ORDER          NUMERIC(19),
  EVT_DATE           DATETIME,
  EVT_TYPE           NUMERIC(10),
  EVT_SOURCE         NUMERIC(10),
  EVT_ACTION         NUMERIC(10),
  EVT_PROCESSMODELL  VARCHAR(255),
  EVT_PROCESS        VARCHAR(255),
  EVT_INFO           VARCHAR(255)
);

CREATE TABLE ORC_EVENT_PROCESS_TOKEN
(
  EVENT_ID           bigint IDENTITY(1,1) NOT NULL,
  EVT_ORDER     NUMERIC(19),
  EVT_DATE      DATETIME,
  EVT_TYPE      NUMERIC(10),
  EVT_SOURCE    NUMERIC(10),
  EVT_ACTION    NUMERIC(10),
  EVT_PROCESS   VARCHAR(255),
  EVT_TOKEN     VARCHAR(255),
  EVT_ACTIVITY  NUMERIC(10),
  EVT_INFO      VARCHAR(255),
  EVT_PROCESSMODELL  VARCHAR(255)
);







CREATE TABLE ORC_EVENT_SYSTEM
(
  EVENT_ID         bigint IDENTITY(1,1) NOT NULL,
  EVT_DATE         DATETIME,
  EVT_TYPE         NUMERIC(10),
  EVT_SOURCE       NUMERIC(10),
  EVT_ACTION       NUMERIC(10),
  EVT_DESCRIPTION  VARCHAR(255)
);

CREATE TABLE ORC_EVT_LOCAL_VARIABLES
(
  ID              bigint           NOT NULL,
  EVV_NAME        VARCHAR(255),
  EVV_VALUE       VARCHAR(255),
  EVV_IS_MESSAGE  NUMERIC(1),
  EVV_PROCESS_ID  VARCHAR(255)
);

CREATE TABLE ORC_EVT_PROCESS_VARIABLES
(
  ID              bigint           NOT NULL,
  EVV_NAME        VARCHAR(255),
  EVV_VALUE       VARCHAR(255),
  EVV_IS_MESSAGE  NUMERIC(1),
  EVV_PROCESS_ID  VARCHAR(255)
);








CREATE TABLE ORC_LANDSCAPE
(
  LAN_SCENARIO     VARCHAR(250),
  LAN_NAME         VARCHAR(250),
  LAN_DATA         IMAGE,
  LAN_DEPLOYED_AT  DATETIME,
  LAN_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_MESSAGE
(
  MES_MESSAGE_ID    VARCHAR(255)          NOT NULL,
  MES_MESSAGE_TYPE  VARCHAR(255),
  MES_CREATED_AT    DATETIME,
  MES_TYPE          VARCHAR(255)
);

CREATE TABLE ORC_MESSAGE_DATA
(
  MSD_MSG_ID    VARCHAR(100)              NOT NULL,
  MSG_MSG_DATA  VARBINARY(MAX)
);

CREATE TABLE ORC_MESSAGE_INTERFACE
(
  MIN_SCENARIO     VARCHAR(250),
  MIN_NAME         VARCHAR(250),
  MIN_DATA         IMAGE,
  MIN_DEPLOYED_AT  DATETIME,
  MIN_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_MESSAGE_MAPPING
(
  MMA_SCENARIO     VARCHAR(250),
  MMA_NAME         VARCHAR(250),
  MMA_DATA         IMAGE,
  MMA_DEPLOYED_AT  DATETIME,
  MMA_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_MESSAGE_PROPERTIES
(
  MESSAGEIDENTIFIER  VARCHAR(255)         NOT NULL,
  MPR_VALUE          VARCHAR(255),
  MPR_KEY            VARCHAR(255)         NOT NULL
);

CREATE TABLE ORC_MESSAGE_TYPE
(
  MTY_SCENARIO     VARCHAR(250),
  MTY_NAME         VARCHAR(250),
  MTY_DATA         IMAGE,
  MTY_DEPLOYED_AT  DATETIME,
  MTY_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_PROCESS_MODE
(
  PCO_PROCESS_NAME  VARCHAR(255)          NOT NULL,
  PCO_TRACE_MODE    NUMERIC(10),
  PCO_CHANGED_AT    DATETIME
);

CREATE TABLE ORC_PROCESS_MODELLS
(
  PMO_SCENARIO     VARCHAR(250),
  PMO_NAME         VARCHAR(250),
  PMO_DATA         IMAGE,
  PMO_DEPLOYED_AT  DATETIME,
  PMO_UNIQUE_NAME  VARCHAR(250) NOT NULL
);

CREATE TABLE ORC_PROCESS_SCENARIO
(
  PSC_UNIQUE_NAME  VARCHAR(250) NOT NULL,
  PSC_NAME         VARCHAR(250),
  PSC_DESCRIPTION  VARCHAR(500),
  PSC_DEPLOYED_AT  DATETIME
);

CREATE TABLE ORC_PROCESS_STATE
(
  PRS_PROCESS_ID  VARCHAR(255)            NOT NULL,
  PRS_MODELL_ID   VARCHAR(255),
  PRS_START_TIME  DATETIME,
  PRS_END_TIME    DATETIME,
  PRS_STATE       NUMERIC(10)
);

CREATE TABLE ORC_PROCESS_TOKEN_STATE
(
  PRS_PROCESS_ID    VARCHAR(255)          NOT NULL,
  PRS_TOKEN_ID      VARCHAR(255),
  PRS_PARENT_TOKEN  VARCHAR(255),
  PRS_CUR_ACTIVITY  VARCHAR(255),
  PRS_CREATE_TIME   DATETIME,
  PRS_END_TIME      DATETIME
);

CREATE TABLE ORC_PROCESS_WAIT_LIST
(
  RECEIVING_NODE   VARCHAR(256)           NOT NULL,
  TOKEN_REFERENCE  IMAGE,
  ID               VARCHAR(256)
);

CREATE TABLE ORC_RECOVERY_DATA
(
  RDA_PROCESS_ID  VARCHAR(50),
  RDA_TOKEN_ID    VARCHAR(50),
  RDA_DATE        DATETIME,
  RDA_ACTIVITY    NUMERIC(10),
  RDA_LOCAL_VARS  IMAGE
);
























CREATE TABLE ORC_SEC_USER_STATE
(
  UST_USER_ID      VARCHAR(255)           NOT NULL,
  USR_LOGON_TRIES  NUMERIC(10),
  USR_LAST_LOGIN   DATETIME,
  USR_STATE        NUMERIC(10)
);
















CREATE TABLE ORC_WORK_QUEUE
(
  ITEMTYPE       VARCHAR(256)             NOT NULL,
  DISCRIMINATOR  VARCHAR(256)             NOT NULL,
  CREATEDAT      DATETIME                           DEFAULT current_timestamp               NOT NULL,
  WORKOBJECT     IMAGE,
  ID             VARCHAR(30),
  ACTION         CHAR(1)                   DEFAULT 'W',
  NAME           VARCHAR(256),
  STATE          NUMERIC(1)
);

CREATE TABLE ORC_SEC_USER_AUTH_METHODS_V2 
(
  OAM_USER_ID     VARCHAR(255) 	NOT NULL,
  OAM_METHOD     VARCHAR(255) 	NOT NULL
);

CREATE TABLE ORC_SEC_CREDENTIAL_V2
(
  OSC_SCENARIO      VARCHAR(255)          NOT NULL,
  OSC_IDENTIFIER    VARCHAR(255)          NOT NULL,
  OSC_TYPE          VARCHAR(255)          NOT NULL,
  OSC_NAME          VARCHAR(255)          NOT NULL,
  OSC_DESC          VARCHAR(255),
  OSC_EXT_PROVIDER  VARCHAR(255),
  OSC_UNIQUE_ID     VARCHAR(255)
);

CREATE TABLE ORC_SEC_GROUP_ROLES_V2
(
  OGR_GROUP_ID  VARCHAR(255)              NOT NULL,
  OGR_ROLE_ID   VARCHAR(255)              NOT NULL
);


CREATE TABLE ORC_SEC_GROUP_V2
(
  OSG_SCENARIO    VARCHAR(255)            NOT NULL,
  OSG_IDENTIFIER  VARCHAR(255)            NOT NULL,
  OSG_DESC        VARCHAR(255)
);


CREATE TABLE ORC_SEC_KEYSTORE_V2
(
  OTS_NAME  VARCHAR(255)                  NOT NULL,
  OTS_DATA  IMAGE
);


CREATE TABLE ORC_SEC_ROLE_V2
(
  OSR_SCENARIO    VARCHAR(255)            NOT NULL,
  OSR_IDENTIFIER  VARCHAR(255)            NOT NULL,
  OSR_DESC        VARCHAR(255)
);


CREATE TABLE ORC_SEC_TRUSTSTORE_V2
(
  OTS_SCENARIO  VARCHAR(255)              NOT NULL,
  OTS_DATA      IMAGE
);


CREATE TABLE ORC_SEC_USER_GROUP_V2
(
  OUG_USER_ID   VARCHAR(255)              NOT NULL,
  OUG_GROUP_ID  VARCHAR(255)              NOT NULL
);


CREATE TABLE ORC_SEC_USER_ROLES_V2
(
  OUR_USER_ID  VARCHAR(255)               NOT NULL,
  OUR_ROLE_ID  VARCHAR(255)               NOT NULL
);

CREATE TABLE ORC_USER_PWD_TABLE
(
  OUP_USER_ID   VARCHAR(255)              NOT NULL,
  OUP_PASSWORD  VARCHAR(255)              NOT NULL,
  OUP_SCENARIO  VARCHAR(255)
);


CREATE UNIQUE INDEX PK_ORC_CHANNEL ON ORC_CHANNEL
(CHA_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_CHANNEL ON ORC_CHANNEL
(CHA_SCENARIO, CHA_NAME);


CREATE UNIQUE INDEX PK_ORC_CONTENT_MAPPING ON ORC_CONTENT_MAPPING
(CMA_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_CONTENT_MAPPING ON ORC_CONTENT_MAPPING
(CMA_SCENARIO, CMA_NAME);


CREATE UNIQUE INDEX PK_ORC_CONTENT_TYPE ON ORC_CONTENT_TYPE
(CTY_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_CONTENT_TYPE ON ORC_CONTENT_TYPE
(CTY_NAME, CTY_SCENARIO);


CREATE INDEX IDX_EVENT_PROCESS_PROCESS_ID ON ORC_EVENT_PROCESS
(EVT_PROCESS);


CREATE INDEX IDX_ORC_EVENT_PROCESS_TOKEN_1 ON ORC_EVENT_PROCESS_TOKEN
(EVT_PROCESS);


CREATE INDEX IDX_ORC_EVENT_PROCESS_TOKEN_2 ON ORC_EVENT_PROCESS_TOKEN
(EVT_PROCESS, EVT_TOKEN);


CREATE INDEX IDX_ORC_EVT_LOCAL_VARIABLES_1 ON ORC_EVT_LOCAL_VARIABLES
(ID);


CREATE INDEX IDX_ORC_EVT_LOCAL_VARIABLES_2 ON ORC_EVT_LOCAL_VARIABLES
(EVV_PROCESS_ID);


CREATE INDEX IDX_ORC_EVT_PROCESS_VAR_1 ON ORC_EVT_PROCESS_VARIABLES
(ID);


CREATE INDEX IDX_ORC_EVT_PROCESS_VAR_2 ON ORC_EVT_PROCESS_VARIABLES
(EVV_PROCESS_ID);


CREATE UNIQUE INDEX PK_ORC_LANDSCAPE ON ORC_LANDSCAPE
(LAN_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_LANDSCAPE ON ORC_LANDSCAPE
(LAN_NAME, LAN_SCENARIO);


CREATE UNIQUE INDEX PK_ORC_MESSAGE_INTERFACE ON ORC_MESSAGE_INTERFACE
(MIN_UNIQUE_NAME);


CREATE UNIQUE INDEX PK_ORC_MESSAGE_MAPPING ON ORC_MESSAGE_MAPPING
(MMA_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_MESSAGE_MAPPING ON ORC_MESSAGE_MAPPING
(MMA_NAME, MMA_SCENARIO);


CREATE UNIQUE INDEX PK_ORC_MESSAGE_TYPE ON ORC_MESSAGE_TYPE
(MTY_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_MESSAGE_TYPE ON ORC_MESSAGE_TYPE
(MTY_NAME, MTY_SCENARIO);


CREATE UNIQUE INDEX PK_ORC_PROCESS_MODELLS ON ORC_PROCESS_MODELLS
(PMO_UNIQUE_NAME);


CREATE UNIQUE INDEX UIDX_ORC_PROCESS_MODELLS ON ORC_PROCESS_MODELLS
(PMO_NAME, PMO_SCENARIO);


CREATE UNIQUE INDEX TESTID ON ORC_WORK_QUEUE
(ID);








ALTER TABLE ORC_ADAPTER_STATE ADD 
  PRIMARY KEY
 (ADS_ADAPTER_NAME);


ALTER TABLE ORC_EVENT ADD 
  PRIMARY KEY
 (EVENT_ID);


ALTER TABLE ORC_EVENT_PROCESS ADD 
  PRIMARY KEY
 (EVENT_ID);


ALTER TABLE ORC_EVENT_PROCESS_TOKEN ADD 
  PRIMARY KEY
 (EVENT_ID);


ALTER TABLE ORC_EVENT_SYSTEM ADD 
  PRIMARY KEY
 (EVENT_ID);


ALTER TABLE ORC_MESSAGE ADD 
  PRIMARY KEY
 (MES_MESSAGE_ID);


ALTER TABLE ORC_MESSAGE_PROPERTIES ADD 
  PRIMARY KEY
 (MESSAGEIDENTIFIER, MPR_KEY);


ALTER TABLE ORC_PROCESS_STATE ADD 
  PRIMARY KEY
 (PRS_PROCESS_ID);


ALTER TABLE ORC_PROCESS_TOKEN_STATE ADD 
  PRIMARY KEY
 (PRS_PROCESS_ID);












ALTER TABLE ORC_SEC_USER_STATE ADD 
  PRIMARY KEY
 (UST_USER_ID);


ALTER TABLE ORC_EVT_LOCAL_VARIABLES ADD 
  CONSTRAINT FK1F556AE88BB9BA29 
 FOREIGN KEY (ID) 
 REFERENCES ORC_EVENT_PROCESS_TOKEN (EVENT_ID);


ALTER TABLE ORC_EVT_PROCESS_VARIABLES ADD 
  CONSTRAINT FK21B3EBAC8BB9BA29 
 FOREIGN KEY (ID) 
 REFERENCES ORC_EVENT_PROCESS_TOKEN (EVENT_ID);


ALTER TABLE ORC_MESSAGE_PROPERTIES ADD 
  CONSTRAINT FK590F386AABB30919 
 FOREIGN KEY (MESSAGEIDENTIFIER) 
 REFERENCES ORC_MESSAGE (MES_MESSAGE_ID);























GO
